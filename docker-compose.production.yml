version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: bendenotvar_backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: ${DATABASE_URL:-file:./dev.db}
      JWT_SECRET: ${JWT_SECRET}
      JWT_EXPIRES_IN: ${JWT_EXPIRES_IN:-7d}
      EMAIL_HOST: ${EMAIL_HOST}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_USER: ${EMAIL_USER}
      EMAIL_PASS: ${EMAIL_PASS}
      EMAIL_FROM: ${EMAIL_FROM}
      PORT: 5000
      CLIENT_URL: https://${DOMAIN}
      ALLOWED_EMAIL_DOMAINS: ${ALLOWED_EMAIL_DOMAINS}
    volumes:
      - ./server/uploads:/app/uploads
      - ./server/prisma:/app/prisma
    ports:
      - "5000:5000"
    networks:
      - bendenotvar_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: https://${DOMAIN}/api
        REACT_APP_SOCKET_URL: https://${DOMAIN}
    container_name: bendenotvar_frontend
    restart: unless-stopped
    networks:
      - bendenotvar_network
    depends_on:
      - backend

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bendenotvar_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - frontend
      - backend
    networks:
      - bendenotvar_network
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  bendenotvar_network:
    driver: bridge

